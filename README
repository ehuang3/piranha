Piranha

PROGRAMS
========
* pirfilt -- collect state messges from all drivers and combine into one message
* pirctrl -- a motion libary of sorts

SCRIPTS
=======
* scripts/piranha -- Start robot drivers
* scripts/piranha-console -- Start joystick daemon and relay messages
* scripts/piranha-console -- Relate state and control messages

Force/Torque Sensors
====================
* Uses nonstandard protocol (see ATI's docs)
* Default NODE id is 0x20, conflicts with PDOs for low-numbered CANopen
  nodes
* Workaround: set node id to 0x27, so we only conflict with CANopen
  nodes > 0x70


COMPUTERS
=========

Calvin
------
Robot control PC.

No getty runs on the Linux virtual terminals.  Gettys run on the
serial console.  Connect from talos with: `screen /dev/ttyS0 38400`

Talos
-----
Console machine for calvin.

Zhaan
-----
Vision processing PC.

thebrain
-------
Manages home directories and logins for other computers.


TROUBLESHOOTING
===============

Are you sure it's plugged in?

SDHs
----
SDHs have an RS232 configuration shell.  To access, connect via a
serial terminal, e.g., `screen /dev/ttyS2 115200` and power cycle the
hand.  You should get a prompt to press spacebar to enter
configuration.  The configuration shell can be used to set
communication parameters, i.e, RS232 or CAN and bitrates.

Note that the DSAs and SDHs share a serial port.

NTCAN_CONTR_ERR_PASSIVE
-----------------------
This code usually means one or more of the following:
* The CAN cable is unplugged
* A device on the bus is operating at the wrong bitrate
* The CAN bus is not terminated

LWA4s
-----
These arms often lose their encoder offsets.  The script `home.sh` in
the socanmatic package can be used to reset the home offset to the
current position.

QUIRKS
======

Peak PCI issue
--------------

Following message printed to console:
    Message from syslogd@calvin at Apr  7 17:05:53 ...
      kernel:[2668911.504456] Disabling IRQ #16

This is potentially a bug in the Peak PCI kernel driver.

Workaround:

1. Stop all userspace arm drivers
    piranha $ ./scripts/piranha stop

2. Remove the kernel module and reinsert the module
    sudo rmmod peak_pci
    sudo modprobe peak_pci

3. Bring down can interfaces:
   for i in can0 can1 can2 can3; do sudo ifdown $i; done

4. Bring up can interfaces:
   for i in can0 can1 can2 can3; do sudo ifup $i; done

5. Start userspace arm drivers
    piranha $ ./scripts/piranha start

(and remember to re-bias the F/T daemons by sending SIGHUP to pirfilt)

# Local Variables:
#   mode: markdown
# End:
